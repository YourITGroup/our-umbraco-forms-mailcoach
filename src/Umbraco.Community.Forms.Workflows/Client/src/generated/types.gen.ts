// This file is auto-generated by @hey-api/openapi-ts

export type CampaignDefaults = {
    fromEmail?: string | null;
    fromName?: string | null;
    language?: string | null;
    subject?: string | null;
};

export type Contact = {
    address1?: string | null;
    address2?: string | null;
    city?: string | null;
    company?: string | null;
    country?: string | null;
    phone?: string | null;
    state?: string | null;
    zip?: string | null;
};

export type Link = {
    href?: string | null;
    method: Method;
    rel?: string | null;
    schema?: string | null;
    targetSchema?: string | null;
};

export type List = {
    beamerAddress?: string | null;
    campaignDefaults?: CampaignDefaults | null;
    contact?: Contact | null;
    dateCreated: string;
    emailTypeOption: boolean;
    id?: string | null;
    webId: number;
    links?: Array<Link> | null;
    listRating: number;
    modules?: Array<unknown> | null;
    name?: string | null;
    notifyOnSubscribe?: string | null;
    notifyOnUnsubscribe?: string | null;
    permissionReminder?: string | null;
    stats?: Stats | null;
    subscribeUrlLong?: string | null;
    subscribeUrlShort?: string | null;
    useArchiveBar: boolean;
    marketingPermissions: boolean;
    doubleOptin: boolean;
    hasWelcome: boolean;
    visibility: Visibility;
};

export type MailcoachEmailList = {
    uuid: string;
    name: string;
    created_at: string;
    updated_at: string;
};

export enum Method {
    GET = 'GET',
    PUT = 'PUT',
    POST = 'POST',
    PATCH = 'PATCH',
    DELETE = 'DELETE',
    OPTIONS = 'OPTIONS',
    HEAD = 'HEAD'
}

export type Stats = {
    avgSubRate: number;
    avgUnsubRate: number;
    campaignCount: number;
    campaignLastSent?: string | null;
    cleanedCount: number;
    cleanedCountSinceSend: number;
    clickRate: number;
    lastSubDate?: string | null;
    lastUnsubDate?: string | null;
    memberCount: number;
    memberCountSinceSend: number;
    mergeFieldCount: number;
    openRate: number;
    targetSubRate: number;
    unsubscribeCount: number;
    unsubscribeCountSinceSend: number;
};

export enum Visibility {
    PUBLIC = 'Public',
    PRIVATE = 'Private'
}

export type GetMailChimpListsData = {
    body?: never;
    path?: never;
    query?: {
        apiKey?: string;
    };
    url: '/MailChimpLists';
};

export type GetMailChimpListsErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
};

export type GetMailChimpListsResponses = {
    /**
     * OK
     */
    200: Array<List>;
};

export type GetMailChimpListsResponse = GetMailChimpListsResponses[keyof GetMailChimpListsResponses];

export type GetMailCoachListsData = {
    body?: never;
    path?: never;
    query?: {
        domain?: string;
        token?: string;
    };
    url: '/MailCoachLists';
};

export type GetMailCoachListsErrors = {
    /**
     * The resource is protected and requires an authentication token
     */
    401: unknown;
    /**
     * The authenticated user does not have access to this resource
     */
    403: unknown;
};

export type GetMailCoachListsResponses = {
    /**
     * OK
     */
    200: Array<MailcoachEmailList>;
};

export type GetMailCoachListsResponse = GetMailCoachListsResponses[keyof GetMailCoachListsResponses];

export type ClientOptions = {
    baseUrl: 'https://localhost:44368' | (string & {});
};